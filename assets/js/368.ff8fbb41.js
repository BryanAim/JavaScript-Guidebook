(window.webpackJsonp=window.webpackJsonp||[]).push([[368],{402:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"string-prototype-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-match"}},[t._v("#")]),t._v(" String.prototype.match()")]),t._v(" "),a("p",[a("code",[t._v("match()")]),t._v("函数用于使用指定的正则表达式模式在当前字符串中进行匹配查找，并返回数组形式的查找结果。")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("regexp")])]),t._v(" "),a("td",[t._v("包含正则表达式模式的 RegExp 对象的实例。也可以是包含正则表达式模式的变量名或字符串。")]),t._v(" "),a("td",[t._v("RegExo")])])])]),t._v(" "),a("p",[t._v("如果参数 "),a("code",[t._v("regExp")]),t._v(" 不是正则表达式对象（RegExp），而是字符串类型，则 "),a("code",[t._v("match()")]),t._v(" 先将该字符串传递给 RegExp 的构造函数，将其转换为一个 RegExp 对象。")]),t._v(" "),a("p",[a("code",[t._v("match()")]),t._v("方法的返回值为 "),a("code",[t._v("Array")]),t._v(" 类型，其返回数组的成员取决于指定的正则表达式模式是否设有全局标志 "),a("code",[t._v("g")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("如果参数 "),a("code",[t._v("regExp")]),t._v(" 没有全局标志 "),a("code",[t._v("g")]),t._v("，则 "),a("code",[t._v("match()")]),t._v(" 函数只查找"),a("strong",[t._v("第一个匹配")]),t._v("，并返回包含查找结果的数组，该数组对象包含如下成员：\n"),a("ul",[a("li",[t._v("索引 "),a("code",[t._v("0")]),t._v("：存放第一个匹配的子字符串。")]),t._v(" "),a("li",[t._v("属性 "),a("code",[t._v("index")]),t._v("：匹配文本在字符串中的起始索引位置。")]),t._v(" "),a("li",[t._v("属性 "),a("code",[t._v("input")]),t._v("：整个字符串对象（"),a("code",[t._v("str")]),t._v("）。")])])])]),t._v(" "),a("p",[t._v("在 IE 6 ~ IE 8 中，该数组还具有额外的 "),a("code",[t._v("lastIndex")]),t._v(" 属性，用于存储匹配文本最后一个字符的下一个位置。")]),t._v(" "),a("ul",[a("li",[t._v("如果参数 "),a("code",[t._v("regExp")]),t._v(" 设有全局标志 "),a("code",[t._v("g")]),t._v("，则 "),a("code",[t._v("match()")]),t._v(" 函数会查找"),a("strong",[t._v("所有的匹配")]),t._v("，返回的数组不再有 "),a("code",[t._v("index")]),t._v(" 和 "),a("code",[t._v("input")]),t._v(" 属性，其中的数组元素就是所有匹配到的子字符串，形如：\n"),a("ul",[a("li",[t._v("索引 "),a("code",[t._v("0")]),t._v("：存放第一个匹配的子字符串(如果存在的话)。")]),t._v(" "),a("li",[t._v("索引 "),a("code",[t._v("1")]),t._v("：存放第二个匹配的子字符串(如果存在的话)。")]),t._v(" "),a("li",[t._v("……")]),t._v(" "),a("li",[t._v("索引 "),a("code",[t._v("N-1")]),t._v("：存放第 N 个匹配的字符串(如果存在的话)。")])])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("match()")]),t._v(" 函数如果没有查找到任何匹配，则返回 "),a("code",[t._v("null")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("ul",[a("li",[t._v("如果你需要知道一个字符串是否匹配一个正则表达式 RegExp ，可使用 "),a("code",[t._v("String.prototype.search()")]),t._v("。")]),t._v(" "),a("li",[t._v("如果你只是需要第一个匹配结果，你可能想要使用 "),a("code",[t._v("RegExp.prototype.exec()")]),t._v("。")]),t._v(" "),a("li",[t._v("如果你想要获得捕获组，并且设置了全局标志，你需要用 "),a("code",[t._v("RegExp.prototype.exec()")]),t._v(" 。")])]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("h3",{attrs:{id:"标准示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准示例"}},[t._v("#")]),t._v(" 标准示例")]),t._v(" "),a("p",[t._v('在下例中，使用 match 查找 "Chapter" 紧跟着 1 个或多个数值字符，再紧跟着一个小数点和数值字符 0 次或多次。正则表达式包含 i 标志，因此大小写会被忽略。')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello world!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["", index: 0, input: "Hello world!", groups: undefined]')]),t._v("\n\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\b\\w/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["H", "w"]')]),t._v("\n\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w(?=r)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w[^\\w]/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["o", "d!"]')]),t._v("\n")])])]),a("h3",{attrs:{id:"全局模式和不区分大小写模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局模式和不区分大小写模式"}},[t._v("#")]),t._v(" 全局模式和不区分大小写模式")]),t._v(" "),a("p",[t._v("下例展示了 "),a("code",[t._v("match()")]),t._v(" 使用 "),a("code",[t._v("global")]),t._v(" 和 "),a("code",[t._v("ignore case")]),t._v(" 标志。"),a("code",[t._v("A-E")]),t._v("、"),a("code",[t._v("a-e")]),t._v(" 的所有字母将会作为一个数组的元素返回。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[A-E]/gi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" matches_array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches_array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['A', 'B', 'C', 'D', 'E', 'a', 'b', 'c', 'd', 'e']")]),t._v("\n")])])]),a("p",[a("strong",[t._v("使用 match()，不传参数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Nothing will come of nothing.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// returns [""]')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);