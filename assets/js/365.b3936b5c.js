(window.webpackJsonp=window.webpackJsonp||[]).push([[365],{405:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"string-prototype-concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-concat"}},[t._v("#")]),t._v(" String.prototype.concat()")]),t._v(" "),a("p",[a("code",[t._v("concat()")]),t._v(" 函数用于将当前字符串与指定字符串进行拼接，并返回拼接后的字符串。")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stringN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("str2...strN")])]),t._v(" "),a("td",[t._v("和原字符串连接的多个字符串。")]),t._v(" "),a("td",[t._v("string")])])])]),t._v(" "),a("p",[a("code",[t._v("concat()")]),t._v(" 函数的返回值为 "),a("code",[t._v("String")]),t._v(" 类型，其返回值为拼接后的字符串。")]),t._v(" "),a("p",[a("code",[t._v("concat()")]),t._v(" 函数的作用等同于运算符 "),a("code",[t._v("+")]),t._v("，例如："),a("code",[t._v("str.concat(str1, str2)")]),t._v(" 等同于 "),a("code",[t._v("str + str1 + str2")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[a("code",[t._v("concat")]),t._v(" 方法将一个或多个字符串与原字符串连接合并，形成一个新的字符串并返回。 "),a("code",[t._v("concat")]),t._v(" 方法并不影响原字符串。")]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[t._v("下面的例子演示如何将多个字符串与原字符串合并为一个新字符串")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hello "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nhello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Kevin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' have a nice day.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello, Kevin have a nice day.")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);