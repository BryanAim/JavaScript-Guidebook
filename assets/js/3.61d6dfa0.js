(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{285:function(t,_,r){t.exports=r.p+"assets/img/60d45e59-0575-49ce-a090-159bcc7abba6.04b86ff1.jpg"},286:function(t,_,r){t.exports=r.p+"assets/img/27c3d2be-b78c-41df-be68-e51577704d6d.62677a02.jpg"},287:function(t,_,r){t.exports=r.p+"assets/img/cad6277c-47f2-4416-872a-801cbb592427.e5cff20e.jpg"},288:function(t,_,r){t.exports=r.p+"assets/img/ee4b63b7-5d4d-4065-94f5-88d42ee0370c.84ff1a13.jpg"},289:function(t,_,r){t.exports=r.p+"assets/img/33a9c0e1-d278-4f83-8870-09898a5ddebe.7d4469e8.jpg"},290:function(t,_,r){t.exports=r.p+"assets/img/eb922750-88ce-48cd-bcf9-1589b19124aa.da67777b.jpg"},291:function(t,_,r){t.exports=r.p+"assets/img/baf4b7bc-b9b7-40a7-a6fd-4d97b8e79271.742c6f66.jpg"},292:function(t,_,r){t.exports=r.p+"assets/img/466e4eed-22cf-40e0-9758-b9ed52c507f5.a80f02e6.jpg"},293:function(t,_,r){t.exports=r.p+"assets/img/79dccb40-6030-4e85-a1d5-d2dd6ab32600.9926c818.jpg"},294:function(t,_,r){t.exports=r.p+"assets/img/36e552e6-64f9-46c2-b0e1-e15016f674b7.ab611dfb.jpg"},295:function(t,_,r){t.exports=r.p+"assets/img/2c3f025f-b245-4606-b7c4-e097d6031f36.5ea447d9.jpg"},296:function(t,_,r){t.exports=r.p+"assets/img/d04409b8-39e2-4b3d-a519-3eb09aae3b38.efd30e96.jpg"},297:function(t,_,r){t.exports=r.p+"assets/img/f76e7ce9-5b24-499b-bbcd-0eaeb8767aff.7a17aea0.jpg"},298:function(t,_,r){t.exports=r.p+"assets/img/b1b45e86-c2a7-4ce3-b14a-c1950e0fea95.7a6baf53.jpg"},299:function(t,_,r){t.exports=r.p+"assets/img/a546a6ee-4486-4cba-9d22-c166aecb6c71.c204587d.jpg"},300:function(t,_,r){t.exports=r.p+"assets/img/5023fcc0-62f1-4232-b06c-85fb2688f31c.73d3ca05.jpg"},301:function(t,_,r){t.exports=r.p+"assets/img/18824375-da7a-48b8-8a0a-74123f2d6dc0.c74916f5.jpg"},334:function(t,_,r){"use strict";r.r(_);var v=r(0),e=Object(v.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"https-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https-协议"}},[t._v("#")]),t._v(" HTTPS 协议")]),t._v(" "),v("p",[v("strong",[t._v("超文本传输安全协议")]),t._v("（Hyper Text Transfer Protocol over Secure Socket Layer，HTTPS），是一种通过计算机网络进行安全通信的传输协议。HTTPS 经由 HTTP 进行通信，但利用 "),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("SSL / TLS")]),t._v(" 来加密数据包。HTTPS 开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTPS")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SSL")]),t._v("（加密 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 认证 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 完整性保护）\n")])])]),v("p",[t._v("HTTP 协议采用明文传输信息，存在信息窃听、信息篡改和信息劫持的风险，而协议 SSL / TLS 具有"),v("strong",[t._v("身份验证")]),t._v("、"),v("strong",[t._v("信息加密")]),t._v("和"),v("strong",[t._v("完整性校验")]),t._v("的功能，可以避免此类问题发生。")]),t._v(" "),v("p",[t._v("SSL / TLS 全称安全传输层协议 Transport Layer Security，是介于 TCP 和 HTTP 之间的一层安全协议，不影响原有的 TCP 协议和 HTTP 协议，所以使用 HTTPS 基本上不需要对 HTTP 页面进行太多的改造。")]),t._v(" "),v("h2",{attrs:{id:"安全问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安全问题"}},[t._v("#")]),t._v(" 安全问题")]),t._v(" "),v("p",[t._v("使用 HTTP 协议通信存在的问题：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("窃听")]),t._v("：通信内容不经加密有可能"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("被第三方捕获")])]),t._v(" "),v("li",[v("strong",[t._v("伪造")]),t._v("：第三方拦截通信内容，并"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("伪装成发送方")]),t._v("向接收方发送通信内容")]),t._v(" "),v("li",[v("strong",[t._v("否认")]),t._v("：发送方将"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("恶意数据")]),t._v("发送给接受方并否认这些数据是它发送的")])]),t._v(" "),v("p",[t._v("窃听属于数据加密问题，而伪造和否认则属于身份认证问题。")]),t._v(" "),v("h3",{attrs:{id:"窃听"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#窃听"}},[t._v("#")]),t._v(" 窃听")]),t._v(" "),v("p",[v("img",{attrs:{src:r(285),alt:"窃听"}})]),t._v(" "),v("h3",{attrs:{id:"伪造"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#伪造"}},[t._v("#")]),t._v(" 伪造")]),t._v(" "),v("p",[v("img",{attrs:{src:r(286),alt:"伪造"}})]),t._v(" "),v("h3",{attrs:{id:"否认"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#否认"}},[t._v("#")]),t._v(" 否认")]),t._v(" "),v("p",[v("img",{attrs:{src:r(287),alt:"否认"}})]),t._v(" "),v("h2",{attrs:{id:"解决方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),v("p",[t._v("对通信内容进行加密的解决方案：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("对称加密")]),t._v("：使用相同密钥加密/解密，但是钥匙交付问题无法解决")]),t._v(" "),v("li",[v("strong",[t._v("非对称加密")]),t._v("：公钥加密数据，私钥解密数据，但是加密/解密消耗时间较多")]),t._v(" "),v("li",[v("strong",[t._v("混合加密")]),t._v("：公钥加密密钥，密钥加密数据，私钥解密密钥，密钥解密数据（非对称传送密钥，密钥传送数据）。解决非对称加密效率问题")]),t._v(" "),v("li",[v("strong",[t._v("中间人攻击")]),t._v("：秘密替换公钥窃取数据，源于服务端无法确认客户端公钥是否合法")]),t._v(" "),v("li",[v("strong",[t._v("消息鉴别码")]),t._v("："),v("code",[t._v("MAC")]),t._v(" 密钥和密文组成的字符串的哈希值。能够解决 "),v("code",[t._v("伪造")]),t._v(" 问题，但无法解决 "),v("code",[t._v("否认")]),t._v(" 问题")]),t._v(" "),v("li",[v("strong",[t._v("数字签名")]),t._v("：服务端创建数字签名，而客户端只验证签名是否争取。解决 "),v("code",[t._v("否认")]),t._v(" 问题")]),t._v(" "),v("li",[v("strong",[t._v("数字证书")]),t._v("：由权威机构背书创建证书，保证公钥不被篡改。解决 "),v("code",[t._v("中间人攻击")]),t._v(" 问题")])]),t._v(" "),v("h3",{attrs:{id:"对称加密"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[t._v("#")]),t._v(" 对称加密")]),t._v(" "),v("p",[v("strong",[t._v("对称加密算")]),t._v("法（Symmetric Key Algorithms）加密使用的密钥和解密使用的密钥是相同的。也就是说，加密和解密都是使用的同一个密钥。因此对称加密算法要保证安全性的话，密钥要做好保密，只能让使用的人知道，不能对外公开。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(288),alt:"对称加密"}})]),t._v(" "),v("p",[v("strong",[t._v("对称密钥加密")]),t._v("一个很重要的特点就是使用相同的密钥进行加密和解密")]),t._v(" "),v("p",[v("img",{attrs:{src:r(289),alt:"对称密钥交付问题"}})]),t._v(" "),v("p",[t._v("假设 B 是没有解密钥匙，所以 A 需要通过互联网将钥匙发送给 B。")]),t._v(" "),v("p",[t._v("但是 X 也有可能看到并获取到这个钥匙，因此，X 也可以通过这个钥匙来解密密文。")]),t._v(" "),v("p",[t._v("上面这个场景就会引出一个新问题，这个问题被称为"),v("strong",[t._v("钥匙交付问题")]),t._v("，那怎么解决这个问题？")]),t._v(" "),v("h3",{attrs:{id:"非对称加密"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[t._v("#")]),t._v(" 非对称加密")]),t._v(" "),v("p",[t._v("为了解决上面的"),v("strong",[t._v("钥匙交付问题")]),t._v("，我们这里引入一个新的方法 —— "),v("strong",[t._v("非对称加密")]),t._v("（Asymmetric Key Algorithms）")]),t._v(" "),v("ul",[v("li",[t._v("用于加密的密钥被称为"),v("strong",[t._v("公钥")]),t._v("，用于解密的密钥被称为"),v("strong",[t._v("私钥")])]),t._v(" "),v("li",[t._v("跟"),v("strong",[t._v("对称加密")]),t._v("相比，公开密钥加密往往"),v("strong",[t._v("需要更多的时间")]),t._v("用于加密和解密")])]),t._v(" "),v("p",[v("strong",[t._v("非对称加密过程")])]),t._v(" "),v("p",[t._v("接收方 B 创建一个公钥和一个私钥，公钥被发送给 A。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(290),alt:"非对称加密过程-创建"}})]),t._v(" "),v("ul",[v("li",[t._v("A 使用从 B 收到的公钥加密数据，将密文发送给 B")]),t._v(" "),v("li",[t._v("B 使用私钥解密从 A 接收到的密文，得到原始数据")])]),t._v(" "),v("p",[v("img",{attrs:{src:r(291),alt:"非对称加密过程-传输"}})]),t._v(" "),v("p",[t._v("在这个过程中：")]),t._v(" "),v("ul",[v("li",[t._v("密文和公钥也可能被恶意第三方 X 截获")]),t._v(" "),v("li",[t._v("但是私钥是 B 保存的，X 无法获取到，自然没有办法解密密文")]),t._v(" "),v("li",[t._v("这样就很好的解决了"),v("strong",[t._v("钥匙交付问题")])])]),t._v(" "),v("p",[v("strong",[t._v("公开密钥加密的问题")])]),t._v(" "),v("ol",[v("li",[t._v("加密和解密都需要耗费时间，有一种叫"),v("strong",[t._v("混合加密")]),t._v("的方法可以解决这个问题")]),t._v(" "),v("li",[t._v("公开密钥的可靠性")])]),t._v(" "),v("h3",{attrs:{id:"混合加密"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#混合加密"}},[t._v("#")]),t._v(" 混合加密")]),t._v(" "),v("p",[v("img",{attrs:{src:r(292),alt:"混合加密"}})]),t._v(" "),v("p",[t._v("混合密钥加密分为两个步骤：")]),t._v(" "),v("ul",[v("li",[t._v("通过公开密钥加密传递密钥")]),t._v(" "),v("li",[t._v("通过速度更快的对称密钥加密方法传递数据")])]),t._v(" "),v("h3",{attrs:{id:"中间人攻击"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[t._v("#")]),t._v(" 中间人攻击")]),t._v(" "),v("p",[t._v("中间人攻击（Man In the Middle Attack）。")]),t._v(" "),v("p",[t._v("为了更好地理解公开密钥加密的可靠性问题，我们回到传递公钥的场景。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(293),alt:"中间人攻击"}})]),t._v(" "),v("p",[t._v("A 拿到的其实是 X 发送给他的伪造公钥，但是 A 无法察觉。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(294),alt:""}})]),t._v(" "),v("p",[t._v("最后，X 用他自己的密钥加密响应数据，并发送给 A，就这样，虽然 A、B 双方能顺利完成通信，但是恶意的第三方 X 能看到解密后的请求数据和响应数据，而 A、B 双方则毫不知情。")]),t._v(" "),v("p",[t._v("中间人攻击的攻击方式：")]),t._v(" "),v("ul",[v("li",[t._v("域名污染：DNS 解析的中间链点返回中间人错误 IP")]),t._v(" "),v("li",[t._v("ARP 欺骗")])]),t._v(" "),v("p",[t._v("潜在的中间人攻击威胁：")]),t._v(" "),v("ul",[v("li",[t._v("浏览器弹出的证书警告，可能访问的是钓鱼网站或假冒的服务器")]),t._v(" "),v("li",[t._v("公共 Wifi 下，没有 HTTPS 加密的网站不要随便登录")]),t._v(" "),v("li",[t._v("在任何网站登录账号必须走 HTTPS 加密协议")])]),t._v(" "),v("h3",{attrs:{id:"消息鉴别码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#消息鉴别码"}},[t._v("#")]),t._v(" 消息鉴别码")]),t._v(" "),v("p",[t._v("消息鉴别码（Message Authentication Code，简写 MAC）是一种用于确认消息完整性（数据不会被篡改）和可靠性（消息认证是确认消息来自正确的发送者）的技术。消息鉴别码可以理解为"),v("strong",[t._v("密钥")]),t._v("和"),v("strong",[t._v("密文")]),t._v("组成的字符串的"),v("strong",[t._v("哈希值")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(295),alt:"消息鉴别码"}})]),t._v(" "),v("p",[t._v("消息鉴别码虽然可以解决"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("伪造")]),t._v("问题，但是仍然无法避免"),v("strong",[t._v("否认")]),t._v("问题。")]),t._v(" "),v("h3",{attrs:{id:"数字签名"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数字签名"}},[t._v("#")]),t._v(" 数字签名")]),t._v(" "),v("p",[t._v("为了解决这个"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("否认")]),t._v("问题，我们接下来看看"),v("strong",[t._v("数字签名")]),t._v("方法。")]),t._v(" "),v("p",[t._v("数据发送方通过约定的哈希函数从数据报文中生成报文摘要（Digest），然后利用私钥对报文摘要进行加密，这个加密后的摘要将作为报文的"),v("strong",[t._v("数字签名")]),t._v("和"),v("strong",[t._v("数据报文")]),t._v("一起发送给接收方。")]),t._v(" "),v("p",[t._v("数据接收方首先使用与发送方一致的哈希函数从接收到的原始报文中计算出报文摘要，接着再用发送方的公钥对数字签名进行解密，得出摘要。如果摘要相同，那么接收方就能确认该数字签名是发送方的。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(296),alt:"数字签名"}})]),t._v(" "),v("h3",{attrs:{id:"数字证书"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数字证书"}},[t._v("#")]),t._v(" 数字证书")]),t._v(" "),v("p",[t._v("虽然上面的方法已经能避免窃听、伪造、否认等问题，但是现在还是没办法避免"),v("strong",[t._v("中间人攻击")]),t._v("，因为我们还是没办法验证公钥的所有者，因此我们需要"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("数字证书")]),t._v("系统来验证公钥的所有者。")]),t._v(" "),v("p",[t._v("接下来，先看看数字证书申请的过程，我们将数字证书认证机构（Certificate Authority）称之为 CA。")]),t._v(" "),v("p",[v("strong",[t._v("数字证书申请过程：")])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("服务器方向第三方机构 CA "),v("strong",[t._v("提交公钥")]),t._v("、"),v("strong",[t._v("组织信息")]),t._v("、"),v("strong",[t._v("个人信息（域名）")]),t._v(" 等信息并申请认证")])]),t._v(" "),v("li",[v("p",[t._v("CA 通过线上、线下等多种手段验证申请者提供信息的真实性，如组织是否存在、企业是否合法、是否拥有域名的所有权等")])]),t._v(" "),v("li",[v("p",[t._v("如信息审核通过，CA 会向申请者签发认证文件证书。证书包含以下信息："),v("strong",[t._v("申请者公钥")]),t._v("、"),v("strong",[t._v("申请者的组织")]),t._v("和"),v("strong",[t._v("个人信息")]),t._v("、"),v("strong",[t._v("签发机构 CA 的信息")]),t._v("、"),v("strong",[t._v("有效时间")]),t._v("、"),v("strong",[t._v("证书序列号")]),t._v("等信息的明文，同时包含"),v("strong",[t._v("数字签名")]),t._v("。数字签名通过"),v("strong",[t._v("散列函数")]),t._v("计算公开的明文信息的"),v("strong",[t._v("信息摘要")]),t._v("，然后，采用 CA 提供的私钥对信息摘要进行加密，加密后的信息摘要即为"),v("strong",[t._v("数字签名")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:r(297),alt:"数字证书"}})]),t._v(" "),v("p",[t._v("现在 B 已经申请到一个数字证书了，那么怎么使用数字证书来检验公钥 PB 是属于 B 呢。")]),t._v(" "),v("p",[v("strong",[t._v("数字证书校验流程：")])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("客户端向服务端发送请求时，服务端返回数字证书文件")])]),t._v(" "),v("li",[v("p",[t._v("客户端读取证书中的相关的明文信息，采用与加密时相同的"),v("strong",[t._v("散列函数")]),t._v("计算得到信息摘要，然后利用内置客户端中的受信任的 CA 公钥解密数字签名，对比证书的信息摘要")]),t._v(" "),v("ul",[v("li",[t._v("如果一致，则可以确认证书的合法性，即公钥合法")]),t._v(" "),v("li",[t._v("如果不一致，则可以确认证书为非法，即公钥非法")]),t._v(" "),v("li",[t._v("如果 CA 不被信任，则找不到对应 CA 证书，证书也会被判定为非法，即公钥非法")])])]),t._v(" "),v("li",[v("p",[t._v("客户端验证证书相关的域名信息、有效时间等信息")])])]),t._v(" "),v("p",[v("img",{attrs:{src:r(298),alt:"数字证书"}})]),t._v(" "),v("p",[t._v("现在可以验证 PB 是属于 B 的，但是怎么验证 PC 是属于受信任的 CA 的呢。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(299),alt:"数字证书"}})]),t._v(" "),v("p",[t._v("事实上，认证机构形成一个树形结构，高级别的权威机构为较低级别的机构创建证书，那就是说，如果要验证的话，就是一级一级向上认证，信任链条的最终是 Root CA，他采用自签名，对他的签名是无条件的信任。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(300),alt:"数字证书"}})]),t._v(" "),v("h2",{attrs:{id:"工作流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),v("p",[t._v("HTTPS 在传输数据之前需要客户端（浏览器）与服务端之间进行一次握手，在握手过程中将确立双方加密传输数据的密码信息。TLS/SSL 协议使用"),v("strong",[t._v("非对称加密")]),t._v("、"),v("strong",[t._v("对称加密")]),t._v("以及 "),v("strong",[t._v("HASH 算法")]),t._v("确保信息通信的安全。")]),t._v(" "),v("p",[v("img",{attrs:{src:r(301),alt:"HTTPS Workflow"}})]),t._v(" "),v("p",[v("strong",[t._v("具体流程：")])]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("Client Hello")]),t._v("：客户端发起 HTTPS 请求。")])]),t._v(" "),v("ul",[v("li",[t._v("不同的客户端对不同的加密算法的支持度不同，因此客户端会将支持的一套"),v("strong",[t._v("加密套件")]),t._v("（Cipher Suite）发送给服务端（除了加密组合方式，报文中还包括 TLS 的协议版本、随机生成的密码串记为 Random1、会话 ID、域名 ServerName 以及签名算法）")])]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[v("p",[v("strong",[t._v("Server Hello")]),t._v("：服务端从客户端支持的加密规则中选用一组加密算法（包括用于生成通信密钥的算法，用于。。的，和用于 HASH 算法），并随机生成密码串记为 Random2，后续将数据传回客户端。")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("Certificate")]),t._v("：服务端收到 Client Hello 之后，向客户端发送 CA 认证的数字证书，用来鉴别服务端身份信息，同时还要生成一个 随机数 同时保存在服务端和发送给客户端。证书包含"),v("strong",[t._v("网站信息")]),t._v("、"),v("strong",[t._v("由 CA 私钥加密的通信公钥")]),t._v("，以及"),v("strong",[t._v("经证书的颁发机构的私钥加密产生的数字签名")]),t._v("等信息。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Server Hello Done")]),t._v("：表示服务端宣告第一阶段的客户端服务端握手协商结束")])]),t._v(" "),v("li",[v("p",[t._v("可选："),v("strong",[t._v("Certificate Request")]),t._v("：必要情况下，要求客户端发送证书验证身份")])]),t._v(" "),v("li",[v("p",[t._v("可选："),v("strong",[t._v("Server Key Exchange")]),t._v("：如果 CA 认证的数字证书提供的信息不够，服务端还可发送提供补充信息")])])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Client Finish")])]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("Client Key Exchange")])]),t._v(" "),v("ul",[v("li",[t._v("客户端收到 CA 数字证书并通过验证，然后通过 CA 公钥解密获取到 "),v("strong",[t._v("服务端公钥")])]),t._v(" "),v("li",[t._v("客户端先读取数字证书中相关的明文信息，采用相同的 Hash 函数计算得到"),v("strong",[t._v("信息摘要")]),t._v("，然后利用内置在客户端中的对应的 CA 的公钥解密"),v("strong",[t._v("数字签名")]),t._v("数据，并与数字证书的摘要进行对比\n"),v("ul",[v("li",[t._v("如果一致，则证书合法，即公钥合法（如果证书受信任，则客户端地址栏会显示小锁头）")]),t._v(" "),v("li",[t._v("如果不一致，则证书非法，即公钥非法（如果证书不受信任，则会提示用户证书存在问题）")])])]),t._v(" "),v("li",[t._v("如果证书受信任，客户端会根据两个 pubkey 随机数生成一串随机数的密钥记为 Pre-Master 随机数，并利用两次 Hello 报文产生的两个随机数 Random1 和 Random2，利用对称密钥生成算法生成对称密钥 "),v("code",[t._v("enc_key = Func(Random1, Random2, Pre-Master)")]),t._v("（即"),v("strong",[t._v("消息鉴别码")]),t._v("：即用于终端数据交互的"),v("span",{staticStyle:{"font-weight":"bold",color:"red"}},[t._v("对称密钥")]),t._v("），并用证书中提供的服务端公钥加密该随机数")]),t._v(" "),v("li",[v("strong",[t._v("传送加密信息")]),t._v("：使用约定好的 HASH 算法计算握手信息，并使用"),v("strong",[t._v("对称密钥")]),t._v("对消息进行加密，最后将之前生成的所有信息发送给服务端")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Change Cipher Spec")]),t._v("：该报文通知服务端，此后的通信都将使用协商好的加密算法计算对称密钥进行加密通信（也就是使用两个随机数以及第三个 Pre-master key/secret 随机数一起算出一个对称密钥 "),v("strong",[t._v("session key/secret")]),t._v("）")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Finished")]),t._v(" 报文：该报文包括连接至此的所有报文的校验值，使用服务端公钥进行加密")])]),t._v(" "),v("li",[v("p",[t._v("可选："),v("strong",[t._v("ClientCertificate")]),t._v(" 报文：如果服务端请求，客户端需要发送 CA 数字证书")])]),t._v(" "),v("li",[v("p",[t._v("可选："),v("strong",[t._v("CertificateVerify")]),t._v(" 报文：服务端如果要求 CA 数字证书，那么需要通过 HASH 算法计算一个服务端发送来的信息摘要")])])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Server Finish")]),t._v("：使用私钥将信息解密取出密钥，使用密钥解密客户端发来的握手信息，并验证 HASH 是否与浏览器发来的一致")])])]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("New Session Ticket")]),t._v("：服务端最后对客户端发送过来的 Finished 报文使用服务端私钥进行解密校验")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Change Cipher Spec")]),t._v("：报文通知服务端，此后的通信都将使用协商好的加密算法计算对称密钥 session key/secret 进行加密通信")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("Finished")]),t._v(" 报文：标志 TLS 连接建立成功")])])]),t._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[t._v("浏览器解密并计算握手信息的 Hash，如果与服务端发来的 Hash 一致，此时握手过程结束，之后所有的通信数据将由之前客户端生成的对称密钥并利用堆成加密算法进行加密")])]),t._v(" "),v("p",[t._v("这里客户端与服务端互相发送加密的握手消息并验证，目的是为了保证双方都获得了一致的密码，并且可以正常的加密解密数据，为后续真正数据的传输做一次测试。")]),t._v(" "),v("p",[t._v("客户端取出提前内置在手机内部的认证机构的公钥")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("用认证机构的公钥去解密公钥证书里的数字签名 从而得到数字指纹")]),t._v(" "),v("li",[t._v("客户端对公钥证书的服务器公钥进行 数字摘要算法 从而生成数字指纹")]),t._v(" "),v("li",[t._v("对比客户端自己生成的数字指纹(第 3 步)和解密得到的数字指纹(第 2 步)是否一致 如果一致则公钥证书验证通过 就可以进行接下来的握手步骤了")])]),t._v(" "),v("blockquote",[v("ul",[v("li",[t._v("Client Hello 包含域名的信息是比较特别的，因为域名是工作在应用层 HTTP 里的，而握手是发生在 TLS 还在传输层。在传输层里面就把域名信息告诉服务端，好让服务器根据域名发送相应的证书。")])])]),t._v(" "),v("h2",{attrs:{id:"相关算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#相关算法"}},[t._v("#")]),t._v(" 相关算法")]),t._v(" "),v("h3",{attrs:{id:"散列函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#散列函数"}},[t._v("#")]),t._v(" 散列函数")]),t._v(" "),v("p",[t._v("常见的散列函数 Hash 算法："),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/MD5",target:"_blank",rel:"noopener noreferrer"}},[t._v("MD5"),v("OutboundLink")],1),t._v("、"),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/SHA-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("SHA1"),v("OutboundLink")],1),t._v("、"),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/SHA%E5%AE%B6%E6%97%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("SHA256"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("散列函数特点是函数单向不可逆转、对输入非常敏感、输出长度固定，针对数据的任何修改都会改变散列函数的结果，用于"),v("strong",[t._v("防止信息篡改")]),t._v("并"),v("strong",[t._v("验证数据的完整性")]),t._v("。")]),t._v(" "),v("p",[t._v("在信息传递过程中，散列函数不能单独实现信息信息防篡改，因为"),v("strong",[t._v("明文传输")]),t._v("，中间人可以修改信息之后重新计算信息摘要，因此需要对传输的信息以及信息摘要进行加密。")]),t._v(" "),v("h3",{attrs:{id:"对称加密-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对称加密-2"}},[t._v("#")]),t._v(" 对称加密")]),t._v(" "),v("p",[t._v("常见的对称加密算法："),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/AES%E6%8C%87%E4%BB%A4%E9%9B%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("AES-CBC"),v("OutboundLink")],1),t._v("、"),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%B3%87%E6%96%99%E5%8A%A0%E5%AF%86%E6%A8%99%E6%BA%96",target:"_blank",rel:"noopener noreferrer"}},[t._v("DES"),v("OutboundLink")],1),t._v("、"),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/3DES",target:"_blank",rel:"noopener noreferrer"}},[t._v("3DES"),v("OutboundLink")],1),t._v("、"),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/RC4",target:"_blank",rel:"noopener noreferrer"}},[t._v("RC4"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("相同的密钥可以用于信息的加密和解密，掌握密钥才能获取信息，能够防止信息窃听，通信方式是 1 对 1。")]),t._v(" "),v("p",[t._v("对称加密的优势是信息传输 1 对 1，需要共享相同的密码，密码的安全是保证信息安全的基础，服务器和 N 个客户端通信，需要维持 N 个密码记录，且缺少修改密码的机制。")]),t._v(" "),v("h3",{attrs:{id:"非对称加密-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密-2"}},[t._v("#")]),t._v(" 非对称加密")]),t._v(" "),v("p",[t._v("常见非对称加密算法："),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("RSA"),v("OutboundLink")],1),t._v("、DSA / DSS")]),t._v(" "),v("p",[t._v("密钥成对出现，一般称为公钥（公开）和私钥（保密），公钥加密的信息只能私钥解开，私钥加密的信息只能公钥解开。因此掌握公钥的不同客户端之间不能互相解密信息，只能和掌握私钥的服务器进行加密通信，服务器可以实现 1 对 N 的通信，客户端也可以用来验证掌握私钥的服务器身份。")]),t._v(" "),v("p",[t._v("非对称加密的特点是 1 对多，服务器只需要维持一个私钥就能够和多个客户端进行加密通信，但服务器发出的信息能够被所有的客户端解密，且该算法的计算复杂，加密速度慢。")]),t._v(" "),v("h2",{attrs:{id:"通信协议对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通信协议对比"}},[t._v("#")]),t._v(" 通信协议对比")]),t._v(" "),v("p",[v("strong",[t._v("HTTP 协议和 HTTPS 协议的区别")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("区别")]),t._v(" "),v("th",[t._v("HTTP")]),t._v(" "),v("th",[t._v("HTTPS")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("协议")]),t._v(" "),v("td",[t._v("运行在 TCP 之上，明文传输，客户端与服务端都无法验证通信双方的身份")]),t._v(" "),v("td",[t._v("基于 SSL 的 HTTP，运行于 SSL 之上，SSL 运行于 TCP 之上，是添加了加密和认证机制的 HTTP")])]),t._v(" "),v("tr",[v("td",[t._v("端口")]),t._v(" "),v("td",[t._v("80")]),t._v(" "),v("td",[t._v("443")])]),t._v(" "),v("tr",[v("td",[t._v("资源消耗")]),t._v(" "),v("td",[t._v("较少")]),t._v(" "),v("td",[t._v("由于加密处理，会消耗更多 CPU 和内存资源")])]),t._v(" "),v("tr",[v("td",[t._v("开销")]),t._v(" "),v("td",[t._v("无需证书")]),t._v(" "),v("td",[t._v("需要 CA 证书，而证书一般需要向认证机构购买")])]),t._v(" "),v("tr",[v("td",[t._v("加密机制")]),t._v(" "),v("td",[t._v("无")]),t._v(" "),v("td",[t._v("共享密钥加密和公开密钥加密并用的混合加密机制")])]),t._v(" "),v("tr",[v("td",[t._v("安全性")]),t._v(" "),v("td",[t._v("弱")]),t._v(" "),v("td",[t._v("由于加密机制，安全性强")])])])]),t._v(" "),v("p",[v("strong",[t._v("HTTPS 主要作用")])]),t._v(" "),v("ul",[v("li",[t._v("对数据进行加密，并建立一个信息安全通道，来保证传输过程中的数据安全")]),t._v(" "),v("li",[t._v("对网站服务器进行真实身份认证")])]),t._v(" "),v("hr"),t._v(" "),v("p",[v("strong",[t._v("参考资料：")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/StqqafHePlBkWAPQZg3NrA",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 一个故事讲完 HTTPS"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/entry/56ce90edefa631df62c21f8d",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 图解 HTTPS 协议"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/post/5c441073e51d455226654d60",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 完全图解 HTTPS"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/post/5af557a3f265da0b9265a498",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 HTTP 和 HTTPS 详解"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.rrfed.com/2017/02/03/https/",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝💯 HTTPS 连接的前几毫秒发生了什么"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22142170",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝💯 深入揭秘 HTTPS 安全问题&连接建立全过程"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://segmentfault.com/a/1190000018746027",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝💯 如何用 Wireshark 抓包 TLS 封包"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.jianshu.com/p/a3a25c6627ee",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 HTTPS 详解 + Wiresahrk 抓包演示"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://developers.weixin.qq.com/community/develop/article/doc/000046a5fdc7802a15f7508b556413",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 一次安全可靠的通信——HTTPS 原理"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("strong",[t._v("HTTPS 协议详解系列")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"http://blog.csdn.net/hherima/article/details/52469267",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 HTTPS 基础知识"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"http://blog.csdn.net/hherima/article/details/52469360",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 TLS/SSL 工作原理"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"http://blog.csdn.net/hherima/article/details/52469488",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 PKI 体系"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/hherima/article/details/52469674",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 TLS/SSL 握手过程"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"http://blog.csdn.net/hherima/article/details/52469787",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 HTTPS 性能与优化"),v("OutboundLink")],1)])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);